---
- name: Pre-reqs for ansible to run
  hosts: all
  gather_facts: false
  become: yes
  pre_tasks:
    - raw: test -e /usr/bin/python || ( yum -y update && yum install -y python-minimal )

- name: Build Vulnerability Scanner Server
  hosts: all
  become: true
  tasks:
  - name: Set machine hostname
    hostname:
      name: TRIVY-SCANNER

  - name: Add hostname to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '^127\.0\.0\.1[ \t]+localhost'
      line: '127.0.0.1 localhost LINUX-BASTION1'
      state: present

  - name: Set timezone to Europe/London
    timezone:
      name: Europe/London

  - name: Create yum repo directory for trivy repo
    copy:
      src: installs/trivy.repo
      dest: /etc/yum.repos.d/
      owner: root
      group: root
      mode: 0755 

  - name: Create python file for scanning job
    copy:
      src: scripts/trivyscanner.py
      dest: /

  - name: Yum Install Dependencies
    yum: name={{ item }}
    with_items:
      - curl
      - yum-utils
      - epel-release
      - gcc
      - pcre-devel
      - openssl-devel
      - zlib-devel
      - wget
      - git
      - cloud-utils
      - libffi-devel
    become: true

  - name: Yum Update
    shell: yum update -y
    become: true

  - name: Download Python 3.7
    unarchive:
     src: https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz
     dest: /usr/src
     remote_src: yes
    become: true

  - name: Configure, build, test and install Python 3.7
    shell: |
      cd /usr/src/Python-3.7.2
      ./configure --enable-optimizations
      make
      make test
      make install
    become: true

  - name: Upgrade to latest Pip3
    pip:
      name: pip
      state: latest
      executable: /usr/local/bin/pip3
    become: true

  - name: Pip Install modules for python3
    pip:
      name: AWSCLI,lxml
      executable: /usr/local/bin/pip3
    become: true

  - name: Download cloudwatch logs agent
    get_url:
      url: https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
      dest: /tmp/awslogs-agent-setup.py
      mode: "+x"

  - name: Cloudwatch logs config
    copy:
      dest: /tmp/cwlogs.conf
      content: |
        [general]
        state_file = /var/awslogs/state/agent-state
        [/var/log/syslog]
        file = /var/log/syslog
        log_group_name = /Centos_Server/system
        log_stream_name = {instance_id}
        datetime_format = %b %d %H:%M:%S
        [/Centos_Server/cloud-init]
        file = /var/log/cloud-init.log
        log_group_name = /Centos_Server/cloud-init
        log_stream_name = {instance_id}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/cloud-init/output]
        file = /var/log/cloud-init-output.log
        log_group_name = /Centos_Server/cloud-init/output
        log_stream_name = {instance_id}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
  - name: Install cloudwatch log agent
    environment:
      LC_ALL: C
    shell: /tmp/awslogs-agent-setup.py --region eu-west-2 --non-interactive -c /tmp/cwlogs.conf
    args:
      creates: /var/awslogs/etc/aws.conf

  - name: Copy cloudwatch logs starter
    copy:
      src: scripts/startcloudwatchlogs.sh
      dest: /usr/bin/startcloudwatchlogs.sh
        owner: root
        group: root
        mode: 0755

  - name: Make Cron Job to start awslogs with right region
    cron:
      name: Start awslogs
      special_time: reboot
      job: /usr/bin/startcloudwatchlogs.sh

  - name: install docker
    shell: |
      yum-config-manager \
      --add-repo \
      https://download.docker.com/linux/centos/docker-ce.repo && \
      yum install -y docker-ce-18.09.3 docker-ce-cli-18.09.3 containerd.io
    become: true

  - name: install trivy
    shell: |
      yum install trivy
    become: true

  - name: Secure sshd_config
    lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PermitRootLogin"
                line="PermitRootLogin no"
                state=present
  - lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PasswordAuthentication"
                line="PasswordAuthentication no"
                state=present
  - lineinfile: dest=/etc/ssh/sshd_config
                regexp="^X11Forwarding"
                line="X11Forwarding no"
                state=present
